% !Mode:: "Tex:UTF-8"
\chapter{基于监督采样的影响力估计算法}
\label{chap:4}
%现如今社会网络规模庞大，节点数量呈海量之势，导致已有的影响最大化算法求解时计算量大，运行时间长。实际上，影响最大化问题求解仅需要根据节点影响值的相对排序，而不需要精确计算。蒙特卡洛理论（Monte Carlo Theory）基于概率分布，通过随机采样，利用小样本的分布情况来近似得到整体样本的分布情况，从而得到准确的估计值。本文深入分析了社会网络中节点分布特性和影响最大化求解的性能瓶颈，通过蒙特卡洛采样来近似估计节点影响值，在保证精度满足要求的前提下，通过采样大幅度提升算法的执行效率。
%社会网络规模庞大，节点数量呈海量之势，导致已有的影响最大化算法求解时计算量大，运行时间长。实际上，影响最大化问题求解仅需要根据节点影响值的相对排序，并不需要精确计算。蒙特卡洛理论（Monte Carlo Theory）基于概率分布，通过随机采样，利用小样本的分布情况来近似得到整体样本的分布情况，可以精确近似求解。本文深入分析了社会网络中节点分布特性和影响最大化求解的性能瓶颈，通过蒙特卡洛采样来近似估计节点影响值，在保证精度满足要求的前提下，大幅度提升算法的执行效率。
社会网络规模庞大，节点数量呈海量之势，给影响最大化问题求解带来了严峻挑战。而已有的影响最大化贪心算法大多基于精确计算得到的节点影响值，因而算法计算量大，运行时间长。实际上，发现社会网络中最有影响力的节点集合并不需要精确计算各节点的影响值，仅仅根据节点影响值的相对排序即可。

%在发现最有影响力节点时并不完全需要基于节点的精确影响值，只需要根据节点影响值的排序即可找到最有影响力的$K$个节点，因此实际计算中可以通过估计近似来减少计算量。另一方面，蒙特卡洛理论基于概率分布，通过随机采样，利用小样本的分布情况来得到整体样本的分布情况，从而得到准确的估计值。本章通过研究社会网络的节点分布特性发现大度数节点的影响值计算复杂度高，是影响最大化求解的性能瓶颈。因此可以通过蒙特卡洛采样来近似估计节点影响值，在保证精度满足要求的前提下，通过采样大幅度提升算法的执行效率。

%现有的影响最大化算法之所以算法复杂度高，运行时间长，其中很重要的原因是现有的研究主要关注于为网络图中每一个节点精确计算影响值。精确计算需要基于所有后继节点的影响值；由于社会网络中节点数目庞大，关联关系复杂，所以算法计算量很大。蒙特卡洛理论基于概率分布，通过随机采样，利用采样节点的分布情况来逼近整体分布情况，从而得到准确的估计值。因此，本章利用蒙特卡洛理论来估计节点的影响值，在保证精度满足要求的前提下，通过采样大幅度提升算法的执行效率。另一方面，最有影响力节点的发现并不完全需要基于节点的精确影响力，根据节点影响力的排序即可找到最有影响力的节点。因此，基于采样估计方法得到的节点影响值虽然存在一定误差，但并不一定影响最终节点的选择。

%然而，众所周知，社会网络中节点度数服从典型的幂律分布，即存在一小部分节点度数很大，具有很高的影响力。计算这些大度数节点的影响值时，计算复杂度高，导致运行时间长，从而成为了整个算法执行的性能瓶颈。针对这些度数大的节点，我们发现通过监督采样的方式进行影响值估计，可以保证精度损失在要求的范围内，同时大幅度提升算法的执行效率。所以，本文基于蒙特卡洛采样理论和灰度估计理论进行节点影响值采样估计，进一步降低了算法执行时间。

本章首先简要分析了现有工作，并介绍了蒙特卡洛理论和灰度预测理论（Grey Forecasting Theory）的基本思想及其在图论算法中的实际应用。通过深入分析社会网络中节点分布特征，本章设计了一种基于幂律指数的监督采样方法ESMCE。ESMCE首先根据给定社会网络的幂律指数来指导初始采样的节点个数；之后根据估计误差同指定精度之间的差距，提出了一种基于灰度预测模型的后续采样节点个数预测方法，以迭代采样的方式逐步求精直至估计误差满足设定的精度要求。本章在六个真实社会网络数据集上进行实验。实验结果表明，本章提出的监督采样方法ESMCE比现有的算法可以达到两个数量级的加速，而其估计误差平均仅有2.21\%，基本上可以忽略。

\section{引言}
\label{sec:41}
现有的影响最大化问题长期受限于计算复杂度高、计算效率低的问题。本章通过分析发现，已有算法之所以运行时间长，其中很重要的一个原因是
%社会网络中影响最大化问题的研究虽然已经有了十年的历史，然而已有的贪心算法在处理大规模社会网络时运行时间依然过长，因此仍有很大的提升空间。我们总结发现，
主要关注于如何降低算法的复杂度，并且在算法设计上计算社会网络中节点影响值时采用了精确计算。例如，Jure Leskovec等人于2007年提出的CELF算法\upcite{jure2007} 利用影响最大化的子模特性，降低了每次模拟时目标节点的选择范围，不需要为所有节点计算影响值，从而降低了计算量。Wei Chen等人提出的MixGreedy算法\upcite{chen2009} 通过在每次模拟时为所有节点计算影响值，并且综合利用了CELF算法，因此大大降低了算法复杂度。Amit Goyal等于基于CELF算法提出了效率更高的CELF++算法\upcite{celf++}，CELF++为每一个节点保存了更多的信息，例如节点的影响值、在当前轮迭代节点之前拥有最大影响值的节点ID以及节点的标志。这些额外信息可以进一步降低在每一轮迭代中计算影响值的节点范围，从而降低复杂度。然而，已有的影响最大化贪心算法，包括本文第\ref{chap:3}章中提出的BUTA算法，都局限于精确计算社会网络中节点的影响值，而没有考虑运用非精确计算的方法去降低算法的复杂度。因此本文试图从这个角度出发，加速影响最大化问题的求解。

经过在真实数据集上大量实验研究，本章发现原有贪心算法执行过程中很大部分时间花费于为大度数节点计算影响值，这也成为了整个算法执行的性能瓶颈。当计算节点的影响值时，需要访问其所有的后继节点；由于同这部分大度数节点相连接的后继节点数目庞大，因此时间开销很大。
另一方面，影响最大化算法其实仅需要在每一轮选出影响值最大的节点，其实并不需要精确计算节点的影响值，仅仅根据影响值相对排序即可。
因此，如果能够通过抽样部分后继节点来合理地估计大度数节点的影响值，就可以节省大量时间。
基于上述思路，本章考虑采用蒙特卡洛理论进行采样估计。蒙特卡洛理论是一种基于概率统计理论的非确定性数据计算方法，它通过随机采样方式以统计特征值来逼近待求解的参数或变量，最终得到所求解的近似值。由于蒙特卡洛方法适用范围广、原理简单，随着计算机技术的飞速发展，蒙特卡洛方法已经成功应用到人口统计、原子模拟、农业预测和金融评估等许多重要领域。鉴于蒙特卡洛方法优良的采样估计特性，本章基于蒙特卡洛理论来估计节点的影响值，从而降低算法的执行时间。

然而，社会网络是典型的复杂网络，具有十分复杂的拓扑结构特征，其节点数量巨大而且节点之间的关联关系随机复杂。社会网络的上述拓扑结构特征使得利用蒙特卡洛理论去估计节点的影响值存在许多挑战，主要包括：
（1）采样节点的个数直接关系到算法的运行时间和精度。为了最小化算法执行时间，需要在保证算法精度符合需求的前提下，尽量少地采样后继节点。然而，大规模社会网络复杂的拓扑结构使得如何确定采样后继节点的个数十分困难。因此，针对不同的社会网络拓扑，如何采样最少数目的节点是本章需要解决的重要研究问题。
（2）采样估计在减少算法运行时间的同时，无法避免会带来估计误差。然而社会网络中节点与节点之间的依赖关系会造成估计误差的传播；后继节点的估计误差会不断累积到父节点，从而导致上层节点误差不断增大。因此，如何控制估计误差的传播，保证所有节点影响值在给定精度范围内也是本章面临的重大挑战之一。

为了解决解决上述挑战，本章提出了一种由幂律指数监督的蒙特卡洛采样方法ESMCE。ESMCE算法通过采样部分后继节点来准确估计节点的影响值，从而大幅度提高贪心算法的执行速度。本章首先给出了节点影响值的无偏估计，并根据目标社会网络的幂律指数来指导初始采样的后继节点个数。之后为了保证算法精度在给定的精度范围内，ESMCE算法采用多次迭代求精的方法，在每次迭代采样中依据采样估计的误差和给定精度要求之间的差距，基于灰度预测模型来预测采样所需的后继节点个数。通过多次采样逐步提高算法精度，直至影响值估计误差小于设定的阈值。本章在六个真实数据集中测试了ESMCE 算法的性能。实验结果显示，同已有的贪心算法MixGreedy相比，ESMCE算法在执行时间方面可以达到85倍的加速效果，而平均仅有2.21\%的估计误差。另外，ESMCE算法的采样估计机制体现了良好的可扩展性，在越大规模的社会网络图中的加速效果越好，因此十分适合于在现实生活大规模社会网络中应用。

\section{背景理论}
\label{sec:42}
本章设计了一种基于采样估计的影响最大化算法。在展开介绍之前，本节首先对ESMCE算法的背景理论：蒙特卡洛理论和灰度预测理的基本知识和主要应用论进行简要介绍。
%由于蒙特卡洛理论能够通过小样本来精确近似求解，同时灰色预测理论可以针对不确定性系统进行准确预测，因此本章设计的ESMCE算法主要基于蒙特卡洛理论和灰度预测理论。下面简要介绍两者的基本知识和主要应用。
\subsection{蒙特卡洛理论}
\label{sec:421}
蒙特卡洛理论是一种非确定性数值计算方法，它以概率统计理论为基础，通过随机抽样，比较逼真地描述事物的特点及物理实验过程，从而可以解决一些数值方法难以解决的问题\upcite{nudtgpu}。

对蒙特卡洛方法的研究可以追溯到 18 世纪著名的蒲丰问题。1777年，法国科学家蒲丰（Buffon）提出通过投针试验来计算圆周率$\pi$的值的数学问题。
%蒲丰的投针试验描述如下：在描绘着间隔为$d$的平行线的平面上进行随机投针，针的长度为$l$，且$l<d$，因此所投的针至多同平面内一条直线相交。假设在实验中投针$n$次，其中针同直线相交的次数为$m$，则可以通过多次随机投针后用$m/n$来估计针同直线相交的概率$P$。而该概率值$P$同平行线间距$d$、针的长度$l$和圆周率$\pi$存在如下关系：$P={2l}/{\pi\cdot d}$。故蒲丰通过${2nl}/{md}$来估计圆周率$\pi$的近似值。
在二战期间，著名数学家、计算机科学家冯$\cdot$诺依曼和乌拉姆等人将随机模拟的方法运用到与原子弹相关的裂变物质种子随机扩散研究中，并以摩纳哥国的蒙特卡洛（Monte Carlo）作为秘密代号，从而以蒙特卡洛命名的随机模拟过程得以沿用和传播，人们将把利用计算机模拟随机现象产生的随机数据来进行近似计算的方法称为蒙特卡洛方法。
利用蒙特卡洛方法进行问题求解的基本步骤主要包括如下：
\begin{enumerate}
\item 建立与求解有关的概率模型，使所求解为所建模型的概率分布或数学期望；
\item 对模型进行随机抽样观察，即产生随机变量；
\item 用算术平均数作为所求解的近似平均值，给出所求解的统计估计值的方差或标准差，即求解精度。
\end{enumerate}

由于蒙特卡洛理论是基于概率统计的方法，因此其误差无法避免。根据大数定理和中心极限定理，蒙特卡洛理论的误差$\varepsilon$为
\begin{equation}\label{equ:401}
\varepsilon = \frac {\lambda_{\alpha} \cdot \sigma}{\sqrt N}
\end{equation}
其中$\alpha$为显著水平，$\lambda_{\alpha}$为正态差，$\sigma$为采样结果之间的标准差，$N$为采样个数。很明显，蒙特卡洛方法的误差是由显著水平、标准差以及采样个数决定的。通常，采样次数越高，则误差越小，结果越接近真实值。

与其它数值计算方法相比，蒙特卡洛方法具有以下优点：（1）蒙特卡洛方法受几何条件限制影响不大，几何越复杂，它的相对优点就越明显。（2）收敛速度与问题的维数无关，采样个数与维数无关，计算时间与维数成比例。而一般数值方法的采样点数同维数呈幂次关系。（3）蒙特卡洛模拟程序结构简单，所需计算机存储单元比其他数值方法少，并且易于实现，适用性很强。

随着计算机的不断发展和信息技术的日益普及，蒙特卡洛方法已经在数学、机械、金融、医学等领域应用越来越广泛。蒙特卡洛方法已经成功解决了许多经典的数学和物理问题，在科学研究中发挥了极其重要的作用，体现了很高的应用价值。因此本文拟采用蒙特卡洛随机采样方法来估算社会网络中节点的影响值，以进一步降低算法的整体执行时间。

\subsection{灰度预测理论}
\label{sec:422}
灰色系统理论是研究少数据、贫信息的不确定性问题时一种重要的研究方法。它以“部分信息已知，部分信息未知”的“小样本”、“贫信息”不确定性系统为研究对象，主要通过对“部分”已知信息的生成、开发，提取其中有价值的信息，挖掘其中体现的规律，从而实现对系统运行行为、演化规律的正确描述和有效监控\upcite{gt2008book}。
%在控制理论研究中，系统信息完全充足的系统为白色系统，相反，系统信息完全未知的系统为黑色系统。而因为灰色系统理论的研究对象介于黑白系统之间，故谓之灰色系统。
%
灰色系统理论是由国内学者邓聚龙教授创立\upcite{ju1982gt,djl1982}。
%1982年，邓教授在《系统与控制通讯》（Systems and Control Letters）杂志上发表了题为“灰色系统的控制问题”（The Control Problems of Grey Systems）的第一篇灰色系统论文\upcite{ju1982gt}；同年邓聚龙教授在国内发表中文文章“灰色控制系统”\upcite{djl1982}。这两篇开创性论文的公开发表，标志着灰色系统理论的诞生。灰色系统理论研究目标是贫信息不确定系统；
由于贫信息不确定性系统的普遍存在以及灰色系统理论独有的优势，使得灰色系统理论具有十分广阔的发展前景。近年来，灰色系统理论发展十分迅速，其理论体系结构已经初步建成，并且在农业、经济、管理、医疗、教育等众多领域得到广泛应用\upcite{xnm2008}，赢得了国内外学者的广泛肯定和关注。

灰色系统理论包含了灰色生成、灰色关联分析、灰色预测、灰色决策、灰色控制等理论体系\upcite{zb2012}，其中灰色预测模型是灰色系统理论的一个重要研究领域，也是预测理论体系中一个重要分支。灰色预测模型主要针对现实世界中大量存在的灰色不确定性预测问题，利用少量有效数据和灰色不确定性数据，通过灰色序列生成进行序列数据建模，把原始数据序列不明显的变化趋势通过变换后呈现明显的变化趋势，从而揭示系统的未来发展趋势，最终进行数据的模拟和预测\upcite{deng2005primary}。 其主要的灰色序列生成算子包括了累加生成算子、累减生成算子和均值生成算子等。经过三十年的发展，灰色预测模型体现出了较强的实用性，已经在工业、农业、社会、气象、经济、能源、交通等众多领域得到应用，成功地解决了生产、生活和科学研究中的大量实际问题，展现出了重要的理论价值和实际应用价值\upcite{lsf2004gt}。

$GM(1,1)$模型是灰色预测模型中最核心，同时应用最广泛的预测模型。由于$GM(1,1)$模型具有所需样本数据少，计算简便，结果可检验等优点，因此特别适用于小样本、贫信息不确定系统和缺乏数据的情况。而本文中采用蒙特卡洛采样方法，希望尽可能少地采集节点并且满足精度要求，因此，利用$GM(1,1)$模型来预测每次迭代中采样节点的个数，从而减少计算采样误差的次数。

\section{ESMCE采样估计算法设计}
\label{sec:43}
基于蒙特卡洛理论和灰度预测模型，本章设计了一种采样估计的影响最大化算法ESMCE。具体而言，ESMCE算法基于社会网络幂律指数来指导初始采样的节点个数，并在后续的迭代采样中基于灰色预测模型来预测采样节点个数，从而逐步求精，提高算法精度。除此之外，ESMCE算法还包含了一种自顶向下的误差分配策略来控制估计误差的传播。

%本章首先介绍了ESMCE算法的总体设计思路，之后给出了其详细设计，包括基于社会网络幂律指数来指导初始采样的节点个数，以及在后续的迭代采样中基于灰色预测模型来预测采样节点个数。最后，本节设计了一种自顶向下的误差分配策略来控制估计误差的传播。
\subsection{ESMCE总体设计}
\label{sec:431}


在贪心算法设计时，为了选出最有影响力的节点，需要计算得到所有节点的影响值。然而，由于社会网络拓扑服从幂律分布，因此存在一部分节点度数和影响值很大。而计算这部分节点时需要花费很长的时间，是整个算法的性能瓶颈。这一点可以很明显地从公式\ref{equ:332}中看出；在公式\ref{equ:332}中，给定节点的影响值计算需要依赖其所有后继节点的影响值。对于度数大的节点，由于其后继节点数目多，因此访问其所有后继节点的信息十分耗时。表\ref{tab:401}给出了本章的六个真实数据集上度数排名前20\%的节点影响值计算时间占总体运行时间的比例。从实验结果中可以发现，该比例在Enron数据集上高达81.2\%，而在其他五个数据集上也均大于50\%，六个数据集平均比例为64\%。因此，如果可以有效降低大度数节点的影响值计算时间，就可以大幅度缩短总体执行时间，提高效率。基于此，本章设计了一种由幂律指数监督的蒙特卡洛采样估计算法（Power-Law Exponent Supervised Monte-Carlo Estimation Approach，ESMCE）。简而言之，ESMCE基于蒙特卡洛理论；为了计算节点$v_i$的影响值，并非访问其所有的后继节点，而是随机采样$v_i$的部分后继节点，并基于采样节点的影响值在给定的精度要求范围内估计节点$v_i$的影响值。由于仅需要部分后继节点的信息，因此可以节省访问开销和计算开销，从而大幅度降低算法运行时间。
\begin{table}[htb]
  \centering
  \begin{minipage}[t]{0.8\linewidth} % 如果想在表格中使用脚注，minipage是个不错的办法
  \caption[度数排名前20\%节点影响值计算时间占总时间比例]{度数排名前20\%节点影响值计算时间占总时间比例}
  \label{tab:401}
    \begin{tabular*}{\linewidth}{ccccccc}
      \toprule[1.5pt]
      {\hei 数据集} & NetHEPT & NetPHY & Enron & Epinions & Amazon & Twitter \\
      \midrule[1pt]
      {\hei 时间比例} & 58.6\% & 56.3\% & 81.2\% & 67.4\% & 51.8\% & 68.5\% \\
      \bottomrule[1.5pt]
    \end{tabular*}
  \end{minipage}
\end{table}

\begin{figure}[htbp] % use float package if you want it here
  \centering
  \includegraphics[width=2.85in]{fig401}
  \caption{ESMCE算法的整体流程图}
  \label{fig:401}
\end{figure}
下面将ESMCE算法的整体设计思路描述如下：首先，依据设定的算法精度，基于第\ref{sec:433}节设计的自顶向下误差分配算法为各个节点进行最大误差阈值分配。然后，基于给定社会网络的幂律指数来计算初始采样的后继节点个数。通过随机采样后继节点，计算估计误差；如果估计误差不符合精度要求，则通过多次迭代采样逐步提升精度，直至符合精度要求；如果估计误差符合精度要求，则说明采样后继节点个数已经足够，此时利用采样后继节点的影响值来估计节点的影响值。ESMCE算法的整体流程图如图\ref{fig:401}所示。

根据公式\ref{equ:401}可知，在蒙特卡洛采样理论中，如果采样节点的个数越多，则估计精度越高，但同时带来开销也越大。因此，为了最小化采样后继节点的个数，本章采用逐步求精的方式，通过多次迭代采集更多的节点来提高估计精度。在ESMCE算法实现中，本章基于灰度预测模型，依据当前估计误差和要求精度之间的差距来预测后续迭代时的采样子节点个数。多次迭代过程直至估计精度满足要求为止。

\subsection{监督采样算法设计}
\label{sec:432}
为了在保证算法精度符合要求的同时将算法的执行时间降到最低，本节设计了一种由社会网络幂律指数指导的采样估计方法，并提出了一种基于灰度预测模型的迭代采样方法以逐步提高算法精度，从而满足用户设定的精度要求。

%本节首先给出了节点影响值的无偏估计，之后设计了一种由社会网络幂律指数指导的采样估计方法，最后本节设计了基于灰度预测模型的迭代采样方法来提高算法精度，以满足用户设定的精度要求。

\subsubsection{节点影响值无偏估计}
\label{sec:4321}
由于直接计算大度数节点的影响值比较耗时，本节试图通过随机采样部分后继节点的方式来估计节点的影响值。为此，本节给出了节点影响值的无偏估计。对于任意节点$v_i$，其影响值$\sigma _S (v_i )$ 通过公式\ref{equ:402}来计算：
\begin{equation}\label{equ:402}
\widetilde{\sigma _S (v_i )} = n_i \cdot \sigma_S (v_j )+ w_{v_i}-(n_i-1)\cdot overlap(v_j,v_k)
\end{equation}
其中，$v_j$和$v_k$是节点$v_i$随机采样的两个后继节点，$n_i$是节点$v_i$的后继节点数目，$overlap(v_j,v_k)$是节点$v_j$和$v_k$之间的影响重叠值。

下面证明公式\ref{equ:402}是对节点影响值的无偏估计，即估计值的数学期望等于节点的真实影响值。
\begin{theorem}
\label{theorem401}
对于任意节点$v_i$，$\widetilde{\sigma _S (v_i )}$是$\sigma _S (v_i )$的无偏估计。
\end{theorem}
\begin{proof}
对于节点$v_i$的任意后继节点$v_j$，假设$p(v_j )$是节点$v_j$在采样过程中被采中的概率。由于采样过程完全随机，因此$p(v_j )=\frac{1}{n_i}$。所以，可以得到：
\begin{eqnarray*}
E(\widetilde{\sigma _S (v_i )})&=& E(n_i\cdot \sigma _S (v_j )+ w_{v_i}-(n_i-1)\cdot overlap(v_j,v_k ) ) \\
&=&n_i\sum_{v_j} \sigma_S (v_j )\cdot p(v_j )+ w_{v_i} -(n_i-1) \sum_{v_j}\sum_{v_k} overlap(v_j,v_k )\cdot p(v_j,v_k )\\
&=&n_i\sum_{v_j} \frac{1}{n_i} \sigma_S (v_j )+ w_{v_i}-(n_i-1) \sum_{v_j}\sum_{v_k} \frac{1}{n_i(n_i-1)} overlap(v_j,v_k )\\
&=&\sum_{v_j} \sigma_S (v_j )+ w_{v_i}-\frac{1}{n_i}\sum_{v_j}\sum_{v_k} overlap(v_j,v_k )\\
&=&\sigma _S (v_i )
\end{eqnarray*}
故$\widetilde{\sigma _S (v_i )}$是$\sigma _S (v_i )$的无偏估计。
\end{proof}

\subsubsection{基于幂律指数的初始采样}
\label{sec:4322}
虽然定理\ref{theorem401}给出了节点影响值的无偏估计，然而蒙特卡洛采样方法的估计误差并非仅仅来自于偏差（Bias），同时还来自于方差（Variance）。由于社会网络中节点服从幂律分布，因此大度数节点的后继节点中只有一小部分节点的影响值很大，而大多数的后继节点均是叶节点，只有十分有限的影响力。这样的拓扑分布特性导致估计结果和真实影响值之间存在较大的误差。因此，为了在保证算法精度符合要求的同时将算法的执行时间降到最低，ESMCE算法首先根据社会网络的幂律指数和先验知识来计算初始采样的后继节点个数，之后采用多轮迭代采样的方式不断提高精度，以满足要求。

社会网络的幂律指数很大程度上反映了社会网络中节点的度分布，体现出社会网络的拓扑特征。
由于采样后继节点的个数同社会网络中节点的度分布有着十分紧密的关系，因此ESMCE算法基于社会网络的幂律指数来确定首次采样所需采集的节点个数。为了寻找两者之间的关联关系，本节在不同类型、不同大小的社会网络数据集中进行了大量实验。实验中估计误差阈值设置为5\%，因此采样节点个数为保证误差小于5\%时所需后继节点个数的最小值。表\ref{tab:402}给出了六个真实数据集上满足上述精度要求时所采样的后继节点个数占所有后继节点个数的比例。从中可以发现，对于幂律指数小的社会网络（例如Enron），节点间的度数分布相对较平缓，因此即使采样很少比例的后继节点也可估计出满足精度要求的节点影响值。相反，对于幂律指数大的网络，节点间的度分布差异较大，因此需要采集更多的节点才能保证估计误差低于给定的阈值。例如，Enron数据集仅需要平均采集4.156\%的后继节点即可满足5\%的精度要求，而在NetPHY数据集中该比例则高达26.987\%。
\begin{table}[htb]
  \centering
  \begin{minipage}[t]{0.8\linewidth} % 如果想在表格中使用脚注，minipage是个不错的办法
  \caption[不同数据集中采样后继节点比例]{不同数据集中采样后继节点比例}
  \label{tab:402}
    \begin{tabular*}{\linewidth}{crrrrrr}
      \toprule[1.5pt]
      {\hei 数据集} & NetHEPT & NetPHY & Enron & Epinions & Amazon & Twitter \\
      \midrule[1pt]
      {\hei 幂律指数} & 2.651 & 2.843 & 2.357 & 2.383 & 2.432 & 2.322 \\
      {\hei 采样比例} & 12.032\% & 26.987\% & 4.156\% & 4.732\% & 5.013\% & 4.031\% \\
      \bottomrule[1.5pt]
    \end{tabular*}
  \end{minipage}
\end{table}

为了定量分析社会网络的幂律指数和采样后继节点比例之间的关联关系，本节采用最小二乘曲线拟合（Least Squares Curve Fitting）进行拟合，得到如下模型：
\begin{equation}\label{equ:403}
\tau=\alpha \cdot\gamma^{\beta}
\end{equation}
其中，$\tau$代表了采样后继节点比例，$\gamma$是给定社会网络的幂律指数，$\alpha$和$\beta$分别是最小二乘曲线拟合系数。通过拟合得到系数$\alpha=1.7715E-5$，$\beta=9.0785$，此时最小二乘曲线拟合的误差服从均值$\mu=0$、方差$\delta^2=0.0105$的高斯分布。ESMCE算法正是基于公式\ref{equ:403}来大致估计不同幂律指数的社会网络中初始采样所需要的后继节点个数。

\subsubsection{基于灰度预测理论的迭代采样}
\label{sec:4323}
公式\ref{equ:403}基于经验知识得到，在初始采样之后，估计误差往往无法满足给定的精度要求。故仍需要进一步采集更多的节点来减少估计误差。为了最小化采样后继节点的个数，一种最基本的方案是每轮采集一个节点，之后计算估计误差，并同给定的精度要求比较，直至满足要求。然而这种方法有很明显的不足：需要很多轮的采样，并且在每轮采样后均需要计算估计误差，并将其同设定的精度要求相比，这样会带来许多额外的时间开销。另一种实现方案是在每一轮迭代中采集固定数目的后继节点，例如50或者100。尽管这种方案可以有效减少迭代采样的轮数，然而如何合理确定每轮采样后继节点的个数是难以解决的问题，而且这种方案可能导致采样后继节点数目过多，影响采样性能。因此，有必要设计一种迭代轮数少同时采样节点个数少的迭代采样方案。

为了解决上述问题，本节设计了一种基于灰度预测模型\upcite{grey1,grey3,grey2}的迭代采样方案，该方案依据上一轮采样的估计误差同给定的精度要求之间的差距来预测下一轮采样中需要采集的后继节点个数。之后按照给定的个数进行后继节点采样，计算估计误差直至满足精度要求。这种采样方案利用了灰色预测模型所需样本数据少、预测准确和结果可检验的优点，从而可以有效降低迭代采样的轮数和采集后继节点的个数，从而减少计算量，降低算法运行时间。

基于公式\ref{equ:401}，当给定采样后继节点的个数$N$时，可以根据采样结果的标准差$\sigma$来得到采样误差$\varepsilon$。因此，如果可以预测给定数目的采样节点的标准差，即可估计满足精度要求所需要的采样后继节点个数。
%为了估计采样后继节点的标准差，我们采用已经在社会科学、农业、管理以及其他领域广泛和成功应用\upcite{grey1,grey3,grey2} 的灰色预测模型。跟传统的随机预测理论不同，灰色预测方法仅需要小数目的采样数据即可十分准确地预测未来值。
标准的一阶单变量灰色预测模型$GM(1,1)$利用了累加生成算子（Accumulated Generating Operation，AGO），通过累加时间序列数据来发现系统的变化规律，并建立微分方程。由于标准差随着采样节点个数的增长基本上满足指数递减，而且$GM(1,1)$ 模型简单，计算效率高，因此，本文采用$GM(1,1)$灰色预测模型并通过一阶累加生成算子来进行预测。根据文献\cite{grey4}，使用$GM(1,1)$模型至少需要四个时间序列数据才能给出接近的灰色预测值。因此，本文使用最近的5个采样标准差数据，通过累加生成构建灰色模型以预测标准差。总而言之，ESMCE算法通过$GM(1,1)$灰色预测模型来预测采样后继节点的标准差$\sigma$，之后依据公式\ref{equ:401}来预估能够满足精度要求的采样后继节点个数。

为了实现上述目标，首先需要在每次迭代采样之前准备好构建$GM(1,1)$模型的五个时间序列数据。为此，在迭代采样前分五次采集五个后继节点，并根据所有已采集后继节点来计算标准差，得到五个初始标准差值。该五个数据即为$GM(1,1)$模型的五个时间序列数据。假定序列$\sigma_{jk}^{(0)}$代表了在第$k$轮迭代中为节点$v_j$估计值的标准差：
\begin{equation}\label{equ:404}
\sigma_{jk}^{(0)}=(\sigma_{jk}^{(0)}(n_k+1), \sigma_{jk}^{(0)}(n_k+2), \cdots ,\sigma_{jk}^{(0)} (n_k+5))
\end{equation}
其中$n_k$是在第$k$轮迭代之前已经采集的后继节点个数，$\sigma_{jk}^{(0)}(n_k+i)$是在第$k$轮迭代采样中采样$i$个节点之后的标准差。接下来，基于一阶累加生成算子来构建以下序列$\sigma_{jk}^{(1)}$，如公式\ref{equ:405}所示：
\begin{equation}\label{equ:405}
\sigma_{jk}^{(1)}=(\sigma_{jk}^{(1)}(n_k+1), \sigma_{jk}^{(1)}(n_k+2), \cdots ,\sigma_{jk}^{(1)} (n_k+5))
\end{equation}
其中，
\begin{equation}\label{equ:406}
\sigma_{jk}^{(1)}(n_k+i)=\sum_{p=n_k+1}^{n_k+i}\sigma_{jk}^{(0)}(p), i=1, 2, \cdots ,5
\end{equation}\\

之后，通过为$\sigma_{jk}^{(1)}(n_k+i)$建立一阶微分方程构建$GM(1,1)$ model模型，如公式\ref{equ:407}所示：
\begin{equation}\label{equ:407}
\frac{\mathrm{d}\sigma_{jk}^{(1)}(n_k+i)}{\mathrm{d}t}+a\cdot\sigma_{jk}^{(1)}(n_k+i)=b
\end{equation}
式中，$a$和$b$是灰色发展系数，其值根据最小二乘方法来估计确定。

基于公式\ref{equ:407}可以预测任意$l>5$的标准差$\sigma_{jk}^{(1)}(n_k+l)$的值。这里将$\sigma_{jk}^{(0)}(n_k+l)$的估计值用$\widetilde{\sigma_{jk}^{(0)}(n_k+l)}$表示。之后，$\widetilde{\sigma_{jk}^{(0)}(n_k+l)}$可以通过反向累加生成算子（Inverse Accumulated Generating Operation）来得到，如公式\ref{equ:408}所示：
\begin{equation}\label{equ:408}
\widetilde{\sigma_{jk}^{(0)}(n_k+l)}=\widetilde{\sigma_{jk}^{(1)}(n_k+l)}-\widetilde{\sigma_{jk}^{(1)}(n_k+l-1)}
\end{equation}

最终，利用预测的$\widetilde{\sigma_{jk}^{(0)}(n_k+l)}$来计算估计误差，并将误差值跟给定的误差阈值相比较。因此，在第$k$轮迭代采样时，节点$v_j$需要采集的后继节点个数${sn}_{jk}$ 是满足精度要求的最小采样值，如公式\ref{equ:409}所示：
\begin{equation}\label{equ:409}
{sn}_{jk}=\arg\min_l{\frac{c\cdot\widetilde{\sigma_{jk}^{(0)}(n_k+l)}}{\sqrt {n_k+l}}<ErrorThres_j}
\end{equation}

通过上述计算可以大幅度减少迭代采样的轮数。另外，由于利用了高效的$GM(1,1)$模型来预测标准差，所以不需要每次采集一个后继节点，计算其标准差并跟给定的误差阈值相比，从而降低了计算复杂度，节省了计算时间。更重要的是，本节设计的迭代采样方法可以保证最终的估计值满足设定的算法精度要求。

算法\ref{alg:401}给出了ESMCE算法的基本设计，其中$R$是模拟的次数，$\widetilde{\sigma _S (v_j )}$是节点$v_j$影响值的估计值，$sn_{jk}$是节点$v_j$在第$k$轮采样时需要采集的后继节点个数，$ErrorThres_j$是节点$v_j$的误差阈值。同其他贪心算法类似，ESMCE从空集$S$开始（第\ref{alg:esmce:1}行），之后选择最大影响值的节点$v_{max}$ 加入到集合$S$（第 \ref{alg:esmce:18}和\ref{alg:esmce:19}行），直至$S$中节点个数为$K$。在每一轮中，ESMCE算法模拟$R$次（第\ref{alg:esmce:4}行）。在每次模拟中，ESMCE首先依据独立级联模型来确定哪些边影响成功，并将原图转换为有向无环图（第\ref{alg:esmce:5}行）。在有向无环转换后，ESMCE自底向上遍历全图，逐层为节点估算影响值（第\ref{alg:esmce:6} - \ref{alg:esmce:16} 行）。对于节点$v_j$，ESMCE首先按照幂律指数大致估计所需采集后继节点的个数，之后计算估计误差（第\ref{alg:esmce:8} 行），紧接着，ESMCE通过灰色预测模型来预测下一轮迭代采样中所需的后继节点个数（第\ref{alg:esmce:10}行），之后采样新的后继节点（第\ref{alg:esmce:11} 行）直至估计值的精度满足设定的要求（第\ref{alg:esmce:9}行）。
\begin{algorithm}
\caption{ESMCE算法}
\label{alg:401}
\begin{algorithmic}[1]
\REQUIRE ~~\
社会网络$G=(V, E)$, 参数$K$
\ENSURE ~~\
节点个数为$K$的节点集合$S$
\STATE 初始化$S=\emptyset $； \label{alg:esmce:1}
\FOR{$i=1$ to $K$} \label{alg:esmce:2}
    \STATE 将图$G$中所有节点的$Inf$置为0；\label{alg:esmce:3}
    \FOR{$j=1$ to $R$} \label{alg:esmce:4}
        \STATE 将模拟图转换为有向无环图$G^*$； \label{alg:esmce:5}
        \FOR{图$G^*$中的每一层$l$} \label{alg:esmce:6}
            \FOR{第$l$的节点$v_j$} \label{alg:esmce:7}
                \STATE 采集初始后继节点，并计算误差$\varepsilon_j$； \label{alg:esmce:8}
                \FOR{($k=0$; $\varepsilon_j > ErrorThres_j$; $k++$)} \label{alg:esmce:9}
                    \STATE 计算仍需采样的后继节点个数$sn_{jk}$； \label{alg:esmce:10}
                    \STATE 随机采样$sn_{jk}$个后继节点并计算$\varepsilon_j$； \label{alg:esmce:11}
                \ENDFOR \label{alg:esmce:12}
                \STATE 计算$E(\widetilde{\sigma _S (v_j)})$ \label{alg:esmce:13}
                \STATE $Inf[v_j] = Inf[v_j]+ E(\widetilde{\sigma _S (v_j)}) $ \label{alg:esmce:14}
            \ENDFOR \label{alg:esmce:15}
        \ENDFOR \label{alg:esmce:16}
    \ENDFOR \label{alg:esmce:17}
    \STATE $v_{max} = \arg\max _ {v\in (V\backslash S)} Inf[v]/R$ \label{alg:esmce:18}
    \STATE $S = S \cup v_{max}$ \label{alg:esmce:19}
\ENDFOR \label{alg:esmce:20}
\end{algorithmic}
\end{algorithm}

\subsection{误差传播控制}
\label{sec:433}
尽管ESMCE算法可以保证单个节点的估计值满足指定的精度要求，不过其前提是所有后继节点的影响值为精确值。然而，大多数情况下，由于社会网络图中节点之间的依赖关系，因此在蒙特卡洛采样估计时，后继节点的影响值同样是估计值，而非真实值。此时，估计误差会随着网络图中的边进行传播；后继节点的估计误差会累积到上层的前驱节点，从而导致上层节点的估计误差相对较大。为了保证算法的精度，需要保证所有节点的误差均符合给定的误差要求。

为了解决误差传播问题，本节设计了一种自顶向下的误差分配策略，为所有大度数节点分配合理的误差阈值。很明显，位于最顶层的节点会累积最多的误差，因此这类节点应该被分配最大的误差阈值。另一方面，叶节点的影响值等于其权重，不需要估计，因此其误差阈值应当被设置为零。当顶层节点的误差阈值分配完后，本节采用自顶向下的方式为各个节点设置误差阈值。分配策略是将前驱节点的误差阈值平均分配给其所有后继节点中的大度数节点。由于大度数节点仅占所有节点中很少一部分，大多数节点都是叶节点没有估计误差，因此这种分配策略可以为所有大度数节点分配合理的误差阈值。该过程直至所有节点均被分配各自的误差阈值为止。

通过采用上述误差分配策略，ESMCE算法可以严格保证所有大度数节点的误差阈值完全符合精度的要求。这是因为上述自顶向下误差分配策略是基于最坏情况，即所有的误差累积到一起。然而，在实际情况中存在着过高估计（Overestimation）和过低估计（Underestimation），这两种情况会在一定程度上相互抵消，从而减轻误差累积情况，进一步保证误差估计值的精度。图\ref{fig:402} 给出了Enron 数据集上在首轮迭代时各节点的估计误差分布情况，其中横坐标是节点的真实影响值，纵坐标是估计影响值；其他数据集上的节点误差分布情况跟Enron体现出类似的特征，因此在图中省略。实验过程中最大误差阈值设置为5\%。 从图\ref{fig:402}中可以发现，大多数节点的影响值相对较小，而这些节点的估计误差也很小，基本可以忽略。而对于那些影响值大的节点，其估计误差也较大，不过在Enron数据集中最大的节点估计误差比例为3.87\%，符合设定的5\%精度要求。这也证明了本节设计的误差分配策略和影响值估计算法ESMCE的有效性。
\begin{figure}[htbp] % use float package if you want it here
  \centering
  \includegraphics[width=4in]{fig402}
  \caption{Enron数据集中所有节点的影响值估计误差散点图}
  \label{fig:402}
\end{figure}

\section{实验与性能分析}
\label{sec:44}
为了验证独立级联模型下ESMCE算法解决影响最大化问题时的执行效率以及有效性，本节在六个真实世界数据集中进行了实验。测试指标包含两个：最终影响的节点数目和算法执行时间，分别对应ESMCE算法的有效性和执行效率。
\subsection{实验设计}
\subsubsection{测试数据集}
本节在六个不同大小、不同类型的真实社会网络数据集中测试了不同算法的性能。表\ref{tab:403}给出了这些数据集的统计信息。
\begin{itemize}
\item \textbf{NetHEPT}\upcite{netheptd}。NetHEPT数据集是从电子版arXiv的高性能物理理论部分中抽取的学术合作网络。节点代表了论文作者，边代表了作者之间的合作关系。
\item \textbf{NetPHY}\upcite{netheptd}。NetPHY数据集同NetHEPT类似，是从arXiv的物理部分中抽取出的学术合作网络。NetPHY数据集中包含了3.7万个节点和18万条边。NetHEPT 和NetPHY被广泛应用于影响最大化的研究\upcite{chen2009,chen2010,ldag,kempe2003}中。
\item \textbf{Enron}\upcite{enrond}。Enron数据集是从邮件系统Enron.com中抽取的邮件联系网络，其中节点代表了邮件使用者，边$(u,v)$代表了邮件用户$u$ 至少向用户$v$发送了一封邮件。
\item \textbf{Epinions}\upcite{epinionsd}。Epinions数据集是从商品意见网站Epinions.com中抽取的用户信任网络。其中节点代表了Epinions网站的用户，而边代表了用户之间的信息关系。
\item \textbf{Amazon}\upcite{amazond}。Amazon数据集是从亚马逊网站Amazon.com中抽取的商品共同购买网络。其中商品是节点，如果商品$v$经常同商品$u$一同购买，则存在边$(u,v)$ 连接节点$u$和$v$。
\item \textbf{Twitter}\upcite{twitterd}。Twitter数据集是从在线社交网站Twitter中抽取的用户好友关系。其中节点代表了Twitter用户，从节点$v_i$到节点$v_j$的边代表了用户$v_j$是$v_i$的粉丝，因此用户$v_j$会从用户$v_i$那里得到信息，因此$v_j$可能会被$v_i$影响。
\end{itemize}
\begin{table}[htb]
\renewcommand{\arraystretch}{1.3}
\caption{六个真实社会网络统计信息}
\label{tab:403}
\centering
\begin{tabular}{lrrcc}
\toprule[1.5pt]
{\hei 算法名称} & {\hei 节点数} & {\hei 边数} & {\hei 平均度数} & {\hei 幂律指数}\\
\midrule[1pt]
\textbf{NetHEPT} & 15,233 & 32,235 & 4.23 & 2.651\\\hline
\textbf{NetPHY} & 37,154 & 180,826 & 9.73 & 2.843\\\hline
\textbf{Enron} & 36,692 & 367,662 & 20.04 & 2.357\\\hline
\textbf{Epinions} & 75,879 & 508,837 & 15.08 & 2.383\\\hline
\textbf{Amazon} & 262,111 & 1,234,877 & 9.42 & 2.432 \\\hline
\textbf{Twitter} & 11,316,811 & 85,331,846 & 15.08 & 2.322\\\hline
\bottomrule[1.5pt]
\end{tabular}
\end{table}

\subsubsection{对比算法}
实验中将ESMCE同四个已有的贪心算法和启发式算法进行了性能比较，如下所示：
\begin{itemize}
\item \textbf{CELF}是由Jure Leskovec等人\upcite{jure2007}提出的对基本爬山贪心算法的优化方法。
\item \textbf{MixGreedy}是由Wei Chen等人于2009年提出的一种影响最大化高效贪心算法。
\item \textbf{MIA}是Wei Chen等人\upcite{chen2010}提出的一种利用节点的局部影响力来近似整体影响力的启发式算法。
\item \textbf{Degree}是一种基本的启发式算法，该算法把社会网络中所有节点按照度数排序，之后选择排名靠前的$K$个节点。
\end{itemize}

\subsection{实验结果}
本实验主要从以下三个方面测试ESMCE算法和其它算法的性能：(1)算法精度；（2）算法执行时间；（3）最大误差阈值的调整对运行时间和算法精度的影响。在实验过程中，独立级联模型的传播概论被设定为0.01，置信度为95\%，最大误差阈值在测试算法精度和执行时间的实验中被设置为5\%，在测试最大误差阈值的调整效果时从1\%逐步增长到10\%。实验运行20000次模拟取平均值得到节点的影响值。

\subsubsection{算法精度分析}
该实验测试了各种算法在六个数据集中选定的最有影响力节点通过影响传播最终可影响的节点个数。很明显，最终被影响的节点数越多，则算法的精度越高。在实验中，最有影响力节点的个数从5逐渐增长到50，以比较算法在不同范围的节点集大小时的精度。六个数据集上的实验结果如图\ref{fig:403}所示。需要说明的是，由于CELF和MixGreedy算法在Twitter 数据集上运行时间过长，因此本实验无法测试这两种算法在Twitter 上的算法精度。
\begin{figure}[htbp] % use float package if you want it here
  \centering
  \includegraphics[width=\textwidth]{fig403}
  \caption{六个数据集上不同算法的精度结果}
  \label{fig:403}
\end{figure}

作为最基本的启发式算法，很明显Degree算法在六个数据集上的表现均是所有算法中最差的。例如，Degree算法在Enron和Amazon数据集上的精度仅仅是CELF算法的36.0\%和23.4\%。综合六个数据集，Degree算法的平均精度是CELF算法精度的40.5\%。这是因为Degree 算法仅简单地选择了度数大的节点，而没有考虑影响力的传播以及节点与节点之间影响范围的重叠。

同Degree启发式相比，MIA启发式表现明显更优。从图中可以发现，在小规模数据集上（例如NetHEPT），MIA启发式的表现同CELF算法相接近。然而在大规模数据集上MIA的表现则比CELF算法要差，MIA在Epinions 和Amazon 数据集上的精度同CELF算法相比分别低9.3\%和15.6\%，而且这个差距会随着网络规模的增长以及所选节点个数的增多而越来越大。从图\ref{fig:403}中可以看到，当把MIA启发式应用到大规模Twitter数据集上且选择节点个数$K=50$时，MIA算法的精度比ESMCE算法低22.9\%。其中的原因是MIA算法为了计算简便，仅仅考虑了节点在其临近区域的影响力，用节点的局部影响值来近似节点的整体影响值，从而导致精度下降。尤其是应用于大规模社会网络时，该精度差距大到无法忽略，从而严重影响了MIA算法在实际社会网络中的应用。

同期望相一致，ESMCE算法的表现明显优于Degree和MIA两个启发式，尤其是在面对大规模社会网络时。例如在Twitter数据集上，ESMCE算法的最终影响节点个数平均比MIA启发式高18.9\%，而比Degree启发式则高出惊人的362.8\%。更重要的是，ESMCE算法的精度在六个数据集上平均仅比CELF和MixGreedy贪心算法低2.21\%和2.13\%，三者的精度基本持平。这也体现了ESMCE算法设计的有效性。

毫无疑问，CELF算法是所有算法中精度最高的，而MixGreedy算法除了在Enron数据集上表现略差，几乎同CELF算法的精度相一致。不过，下一节的运行时间测试将说明，这两种贪心算法虽然精度很高，然而其算法执行时间十分长，效率很低，以至于无法在大规模社会网络（例如Twitter数据集）上运行。

总而言之，ESMCE在算法精度方面上表现十分稳定，在大多数实验环境下仅比经典的CELF和MixGreedy贪心算法略低。这是由于ESMCE算法采用了监督采样的方式来估计节点的影响值，因此对算法精度的影响较小。上述实验结果充分证明了ESMCE算法设计的合理性。

\subsubsection{算法执行时间分析}
此节将测试了五种算法在不同数据集上的运行时间。在实验中，各算法的执行时间是指在不同数据集上定位最有影响的50个节点所需要的时间开销。

图\ref{fig:404}给出了算法执行时间的实验结果，图中的纵坐标采用了指数坐标。很明显，在六个数据集上CELF算法均是所有算法中最耗时的。对于Amazon数据集，CELF大概需要85个小时才能最终选定50 个节点。相比之下，MixGreedy表现略好，然而其加速效果仍然无法满足应用对于低运行时间的要求。比如在Enron、Epinions和Amazon数据集上MixGreedy都需要五小时以上的执行时间。另外，CELF和MixGreedy算法由于执行效率太慢，因此无法在Twitter数据集上运行。该缺点严重影响了两种贪心算法在大规模社会网络中的实际应用。
\begin{figure}[htbp] % use float package if you want it here
  \centering
  \includegraphics[width=4in]{fig404}
  \caption{六个数据集上不同算法的执行时间结果}
  \label{fig:404}
\end{figure}

在ESMCE算法的运行时间方面，实验结果说明了ESMCE算法的执行效率明显高于CELF和MixGreedy两个贪心算法。具体表现在以下三个方面。（1）ESMCE仅需要66.7秒和11.3分钟就能够在NetHEPT 和Amazon数据集上定位最有影响的50 个节点，同CELF 算法相比达到了两个数量级以上的加速。同MixGreedy相比，ESMCE在NetHEPT、NetPHY、Enron、Epinions和Amazon 数据集上的加速比分别是$25.9$倍、$49.4$倍、$84.7$倍、$63.0$倍 和$56.7$倍。这有力证明了本章提出的ESMCE算法可以显著提高已有贪心算法的执行效率。（2）ESMCE 算法更适合于幂律指数小、规模大的社会网络，例如Enron和Amazon。这是因为当应用于幂律指数小的大规模社会网络时，ESMCE算法仅需采样一小部分后继节点即可准确地估计节点的影响值，因此存在更多空间以利用蒙特卡洛采样估计来提升性能。（3）ESMCE算法的可扩展性更优。主要表现在ESMCE算法可以高效处理大规模社会网络，例如本章实验中使用的Twitter数据集。相比之下，MixGreedy和CELF算法则无法处理如此大规模的网络数据集。

在MIA和Degree启发式方面，两种启发式的执行时间明显更短。Degree启发式是所有测试算法中最快的，仅需要几秒时间即可完成。MIA算法则需要大致两分钟时间在Twitter数据集上定位50个有影响力节点。然而，根据之前的算法精度测试，两种启发式的精度较低，因此难以应用于大规模社会网络。

\subsubsection{最大阈值调整及设置}
本节将研究最大误差阈值的设置对于ESMCE算法的执行时间以及算法精度的影响。实验基于$K=50$来度量ESMCE算法的运行时间和影响范围值。图\ref{fig:405}给出了在六个真实数据集上的实验结果。其中，横坐标是最大误差阈值，其设置范围从1\%递增到10\%；左侧横坐标是算法执行时间；右侧横坐标是ESMCE 算法同CELF 算法的精度差距；由于CELF算法是所有算法中精度最好的，因此在这里以ESMCE 算法同CELF 算法的精度差距来度量ESMCE 算法的精度表现。由于CELF 算法无法在Twitter数据集上运行，因此在本节实验没有在Twitter 数据集上测试。
\begin{figure}[htbp] % use float package if you want it here
  \centering
  \includegraphics[width=4in]{fig405}
  \caption{最大误差阈值的设置对于ESMCE精度和执行时间的影响}
  \label{fig:405}
\end{figure}

如图\ref{fig:405}所示，随着最大误差阈值的增加，执行时间在开始阶段（从1\%到5\%）下降十分迅速，之后下降速度明显减缓。比如，当最大误差阈值从1\%增加到5\% 时，Amazon数据集的执行时间从3597秒迅速降到681秒。而当最大误差阈值从5\%增加到10\%时，执行时间仅仅从681秒降为了464秒。

在算法精度方面，随着最大误差阈值的增加，为了满足设定的精度要求，所需采集的后继节点个数变小，因此导致了估计精度的降低。同执行时间的变化规律类似，ESMCE算法同CELF 算法的精度差距在开始阶段增长迅速，之后逐渐减慢。在Amazon数据集上，当最大误差阈值为1\%时，精度差距仅为0.35\%；而当最大误差阈值为5\%时，精度差距快速增长到2.17\%。 之后该增长趋势明显变缓；当最大误差阈值增长到10\%时，精度差距大致为2.69\%。基于上述发现，在实际设置ESMCE算法最大误差阈值大小时，可以选择算法精度和执行时间曲线的拐点5\%，从而在执行时间和算法精度之间得到较好的权衡。

\subsection{讨论}
总结上述实验结果，可以发现本节提出的ESMCE在算法精度和执行效率方面均体现出很好的性能和鲁棒性。同现有的影响最大化贪心算法相比，ESMCE可以很好地提高算法的执行效率，达到一个数量级以上的加速效果。同时ESMCE的精度几乎同贪心算法相一致，其估计误差十分小，基本上可以忽略。另外，ESMCE算法的可扩展性明显比其他贪心算法更好。同现有的启发式算法相比，尽管ESMCE算法的执行时间较长，然而其算法精度则明显优于现有的启发式算法，特别是应用于大规模社会网络时。

基于实验结果，本文相信对于那些精度要求较高的应用场景，例如市场营销和广告投放，ESMCE可以作为适用于大规模社会网络的高效影响最大化问题解决方案。而对于那些对算法精度要求较低，但对执行时间更加看重的应用场景，MIA和其他启发式算法可以作为很好的备选方案。

\section{小结}
\label{sec:45}
本章提出了一种幂律指数指导的蒙特卡洛监督采样估计算法ESMCE来加速影响最大化问题求解。ESMCE的设计思路同现有贪心算法不同，ESMCE没有精确计算各节点的影响值，而是通过蒙特卡洛理论和灰度理论来采样估计节点的影响值。同时ESMCE算法还设计了一种自顶向下的误差阈值分配方案来控制估计误差的传播。通过在六个真实社会网络中大量实验验证，ESMCE比现有的贪心算法MixGreedy达到了多达85倍的加速。另外，ESMCE的估计误差十分小，可以忽略。
